{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\music recomm\\\\spotify-recommendation-system-main\\\\music_recommendation_system\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MusicPrediction() {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [imageUrls, setImageUrls] = useState([]);\n  const handleSearch = async () => {\n    try {\n      const response = await axios.post('/predict', {\n        query: searchQuery\n      });\n      const imageUrls = response.data.artist.tracks[0].album.images.slice(0, 3).map(image => image.url);\n      setImageUrls(imageUrls);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchQuery,\n        onChange: event => setSearchQuery(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: imageUrls.map((url, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: url,\n        alt: `Album ${index + 1}`,\n        style: {\n          width: '33.33%'\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(MusicPrediction, \"z5QeYLwBT+zrybP1/14A240UKcs=\");\n_c = MusicPrediction;\nexport default MusicPrediction;\nvar _c;\n$RefreshReg$(_c, \"MusicPrediction\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","MusicPrediction","_s","searchQuery","setSearchQuery","imageUrls","setImageUrls","handleSearch","response","post","query","data","artist","tracks","album","images","slice","map","image","url","error","console","children","type","value","onChange","event","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","display","index","src","alt","width","_c","$RefreshReg$"],"sources":["D:/Projects/music recomm/spotify-recommendation-system-main/music_recommendation_system/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction MusicPrediction() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [imageUrls, setImageUrls] = useState([]);\n\n  const handleSearch = async () => {\n    try {\n      const response = await axios.post('/predict', { query: searchQuery });\n      const imageUrls = response.data.artist.tracks[0].album.images.slice(0, 3).map(image => image.url);\n      setImageUrls(imageUrls);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <input type=\"text\" value={searchQuery} onChange={(event) => setSearchQuery(event.target.value)} />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n      <div style={{ display: 'flex' }}>\n        {imageUrls.map((url, index) => (\n          <img key={index} src={url} alt={`Album ${index + 1}`} style={{ width: '33.33%' }} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default MusicPrediction;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,UAAU,EAAE;QAAEC,KAAK,EAAEP;MAAY,CAAC,CAAC;MACrE,MAAME,SAAS,GAAGG,QAAQ,CAACG,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,GAAG,CAAC;MACjGb,YAAY,CAACD,SAAS,CAAC;IACzB,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEpB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,gBACEtB,OAAA;QAAOuB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAErB,WAAY;QAACsB,QAAQ,EAAGC,KAAK,IAAKtB,cAAc,CAACsB,KAAK,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAClG/B,OAAA;QAAQgC,OAAO,EAAEzB,YAAa;QAAAe,QAAA,EAAC;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1C,eACN/B,OAAA;MAAKiC,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAZ,QAAA,EAC7BjB,SAAS,CAACY,GAAG,CAAC,CAACE,GAAG,EAAEgB,KAAK,kBACxBnC,OAAA;QAAiBoC,GAAG,EAAEjB,GAAI;QAACkB,GAAG,EAAG,SAAQF,KAAK,GAAG,CAAE,EAAE;QAACF,KAAK,EAAE;UAAEK,KAAK,EAAE;QAAS;MAAE,GAAvEH,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAAC7B,EAAA,CA3BQD,eAAe;AAAAsC,EAAA,GAAftC,eAAe;AA6BxB,eAAeA,eAAe;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}