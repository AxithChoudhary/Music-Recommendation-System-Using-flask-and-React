{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\music recomm\\\\spotify-recommendation-system-main\\\\musicreco-master\\\\musicreco-master\\\\src\\\\hero.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport hero from './hero.svg';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Hero1() {\n  _s();\n  const [song, setSong] = useState('');\n  const [images, setImages] = useState([]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch('/predict', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        song\n      })\n    }).then(response => response.json()).then(data => {\n      setImages(data.prediction);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"herotxt\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"search-bar__label\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search for a song\",\n          value: song,\n          onChange: e => setSong(e.target.value),\n          className: \"search-bar__input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"search-bar__button\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar__results\",\n      children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: `Image ${index}`,\n        className: \"search-bar__result-image\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n\n  // return(\n  //     <body>\n  //     <div class=\"herotxt\">\n  //     <p class=\"headtxt\">Find The Music That Match's Your</p>&nbsp;&nbsp;<p class=\"high\">Vibe!!</p><br/>\n  //     <p class=\"subhead\">Unlock Your Perfect</p>&nbsp;<p class=\"subhigh\">Soundtracks!!</p><br/>\n  //     </div>\n  //     <input placeholder=\"Share the name of the song closest to your heart\" class=\"songinp\"></input>    \n  //     <br/>\n  //     <button class=\"btn1\">Get Vibin'</button>\n  //     <button class=\"btn2\">Suprise Me</button>\n  //     <img src={hero} alt='hero' class=\"hero\"/>\n  //     </body>\n  // );\n}\n_s(Hero1, \"1zG2HfaAg47OWe9Pj/WqIxUlC3c=\");\n_c = Hero1;\nexport default Hero1;\nvar _c;\n$RefreshReg$(_c, \"Hero1\");","map":{"version":3,"names":["hero","React","useState","jsxDEV","_jsxDEV","Hero1","_s","song","setSong","images","setImages","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","prediction","catch","error","console","className","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","map","image","index","src","alt","_c","$RefreshReg$"],"sources":["D:/Projects/music recomm/spotify-recommendation-system-main/musicreco-master/musicreco-master/src/hero.js"],"sourcesContent":["import './App.css';\nimport hero from './hero.svg';\n\n\nimport React, { useState } from 'react';\n\nfunction Hero1(){\n    \n  const [song, setSong] = useState('');\n  const [images, setImages] = useState([]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch('/predict', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ song }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        setImages(data.prediction);\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n\n  return (\n    <div className=\"herotxt\">\n      <form onSubmit={handleSubmit}>\n        <label className=\"search-bar__label\">\n          <input\n            type=\"text\"\n            placeholder=\"Search for a song\"\n            value={song}\n            onChange={(e) => setSong(e.target.value)}\n            className=\"search-bar__input\"\n          />\n        </label>\n        <button type=\"submit\" className=\"search-bar__button\">\n          Search\n        </button>\n      </form>\n      <div className=\"search-bar__results\">\n        {images.map((image, index) => (\n          <img\n            key={index}\n            src={image}\n            alt={`Image ${index}`}\n            className=\"search-bar__result-image\"\n          />\n        ))}\n      </div>\n    </div>\n  );\n\n    // return(\n    //     <body>\n    //     <div class=\"herotxt\">\n    //     <p class=\"headtxt\">Find The Music That Match's Your</p>&nbsp;&nbsp;<p class=\"high\">Vibe!!</p><br/>\n    //     <p class=\"subhead\">Unlock Your Perfect</p>&nbsp;<p class=\"subhigh\">Soundtracks!!</p><br/>\n    //     </div>\n    //     <input placeholder=\"Share the name of the song closest to your heart\" class=\"songinp\"></input>    \n    //     <br/>\n    //     <button class=\"btn1\">Get Vibin'</button>\n    //     <button class=\"btn2\">Suprise Me</button>\n    //     <img src={hero} alt='hero' class=\"hero\"/>\n    //     </body>\n    // );\n}\n\nexport default Hero1;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,IAAI,MAAM,YAAY;AAG7B,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,KAAKA,CAAA,EAAE;EAAAC,EAAA;EAEd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClBC,KAAK,CAAC,UAAU,EAAE;MAChBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ;MAAK,CAAC;IAC/B,CAAC,CAAC,CACCa,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZb,SAAS,CAACa,IAAI,CAACC,UAAU,CAAC;IAC5B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC;EAED,oBACEtB,OAAA;IAAKwB,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBzB,OAAA;MAAM0B,QAAQ,EAAEnB,YAAa;MAAAkB,QAAA,gBAC3BzB,OAAA;QAAOwB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,eAClCzB,OAAA;UACE2B,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,mBAAmB;UAC/BC,KAAK,EAAE1B,IAAK;UACZ2B,QAAQ,EAAGtB,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;UACzCL,SAAS,EAAC;QAAmB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAC7B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACI,eACRnC,OAAA;QAAQ2B,IAAI,EAAC,QAAQ;QAACH,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAErD;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ,eACPnC,OAAA;MAAKwB,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EACjCpB,MAAM,CAAC+B,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBtC,OAAA;QAEEuC,GAAG,EAAEF,KAAM;QACXG,GAAG,EAAG,SAAQF,KAAM,EAAE;QACtBd,SAAS,EAAC;MAA0B,GAH/Bc,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAKb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;;EAGN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AAACjC,EAAA,CAjEQD,KAAK;AAAAwC,EAAA,GAALxC,KAAK;AAmEd,eAAeA,KAAK;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}